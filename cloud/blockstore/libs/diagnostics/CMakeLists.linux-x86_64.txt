# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

add_subdirectory(data)
add_subdirectory(events)
add_subdirectory(ut)

add_library(blockstore-libs-diagnostics)


target_link_libraries(blockstore-libs-diagnostics PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  cloud-blockstore-config
  blockstore-libs-common
  libs-diagnostics-data
  libs-diagnostics-events
  blockstore-libs-service
  public-api-protos
  core-libs-common
  core-libs-diagnostics
  core-libs-throttling
  libs-user_stats-counter
  cpp-deprecated-atomic
  cpp-digest-crc32c
  library-cpp-eventlog
  cpp-histogram-hdr
  library-cpp-logger
  library-cpp-lwtrace
  cpp-lwtrace-mon
  cpp-monlib-dynamic_counters
  monlib-encode-spack
  cpp-monlib-service
  monlib-service-pages
  service-pages-tablesorter
  cpp-threading-hot_swap
)

target_sources(blockstore-libs-diagnostics PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/block_digest.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/config.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/critical_events.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/diag_down_graph.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/downtime_history.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/dumpable.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/fault_injection.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/incomplete_request_processor.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/incomplete_requests.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/hostname.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/probes.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/profile_log.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/quota_metrics.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/request_stats.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/server_stats.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/server_stats_test.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/stats_aggregator.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/stats_helpers.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/user_counter.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/volume_balancer_switch.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/volume_perf.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/volume_stats.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/diagnostics/volume_stats_test.cpp
)

