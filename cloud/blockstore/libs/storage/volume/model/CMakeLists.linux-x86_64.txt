# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(ut)

add_library(storage-volume-model)


target_link_libraries(storage-volume-model PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  blockstore-libs-service
  libs-storage-protos
  libs-storage-protos_ydb
  core-libs-diagnostics
  core-libs-throttling
  library-actors-core
  cpp-containers-intrusive_rb_tree
)

target_sources(storage-volume-model PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/checkpoint.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/checkpoint_light.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/client_state.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/follower_disk.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/helpers.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/merge.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/meta.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/requests_time_tracker.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/requests_inflight.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/retry_policy.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/stripe.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/volume_params.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/volume_throttling_policy.cpp
)


generate_enum_serilization(storage-volume-model
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/checkpoint.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/volume/model/checkpoint.h
)

generate_enum_serilization(storage-volume-model
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/follower_disk.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/volume/model/follower_disk.h
)

generate_enum_serilization(storage-volume-model
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/model/requests_time_tracker.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/volume/model/requests_time_tracker.h
)
