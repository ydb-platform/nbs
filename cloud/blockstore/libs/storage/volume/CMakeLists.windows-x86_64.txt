# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

add_subdirectory(model)
add_subdirectory(actors)
add_subdirectory(ut)
add_subdirectory(testlib)
add_subdirectory(ut_linked)

add_library(libs-storage-volume)


target_link_libraries(libs-storage-volume PUBLIC
  contrib-libs-cxxsupp
  yutil
  blockstore-libs-common
  blockstore-libs-diagnostics
  blockstore-libs-kikimr
  blockstore-libs-service
  libs-storage-api
  libs-storage-bootstrapper
  libs-storage-core
  libs-storage-partition
  libs-storage-partition2
  libs-storage-partition_nonrepl
  libs-storage-protos
  libs-storage-protos_ydb
  storage-volume_throttling_manager-model
  storage-volume-model
  storage-volume-actors
  core-libs-common
  library-actors-core
  library-cpp-lwtrace
  monlib-service-pages
  cpp-protobuf-util
  ydb-core-base
  core-blockstore-core
  ydb-core-mind
  ydb-core-node_whiteboard
  ydb-core-scheme
  ydb-core-tablet
  ydb-core-tablet_flat
)

target_sources(libs-storage-volume PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/multi_partition_requests.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/partition_info.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/tracing.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_throttler_logger.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_acquire.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_addclient.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_allocatedisk.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_change_storage_config.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_checkpoint.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_cleanup_history.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_follower.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_forward.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_forward_trackused.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_initschema.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_lagging_agents.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_leader.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_loadstate.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_migration.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_monitoring_checkpoint.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_monitoring_removeclient.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_monitoring.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_read_history.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_read_meta_history.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_reallocatedisk.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_release.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_removeclient.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_reset_seqnumber.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_resync.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_startstop.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_stats.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_statvolume.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_throttling.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_update_volume_throttling_config.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_updateconfig.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_updatestartpartitionsneeded.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_updateusedblocks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_updatevolumeparams.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_waitready.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor_write_throttlerstate.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_actor.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_counters.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_database.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/volume/volume_state.cpp
)

