
# This file was generated by the build system used internally in the Yandex monorepo.
# Only simple modifications are allowed (adding source-files to targets, adding simple properties
# like target_include_directories). These modifications will be ported to original
# ya.make files by maintainers. Any complex modifications which can't be ported back to the
# original buildsystem will not be accepted.


add_subdirectory(benchmark)
add_subdirectory(model)
add_subdirectory(testlib)
add_subdirectory(ut)
add_subdirectory(ut_actor)
add_subdirectory(ut_large)
get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_library(libs-storage-disk_agent)
target_link_libraries(libs-storage-disk_agent PUBLIC
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  cloud-blockstore-config
  blockstore-libs-kikimr
  libs-rdma-iface
  blockstore-libs-service_local
  libs-spdk-iface
  libs-storage-api
  libs-storage-core
  storage-disk_agent-model
  libs-storage-disk_common
  libs-storage-model
  core-libs-common
  cpp-containers-stack_vector
  cpp-deprecated-atomic
  ydb-core-base
  ydb-core-mind
  ydb-core-mon
  ydb-core-tablet
  cpp-actors-core
)
target_sources(libs-storage-disk_agent PRIVATE
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_acquire.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_disable.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_init.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_io.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_monitoring.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_partial_suspend.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_register.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_release.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_secure_erase.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_stats.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor_waitready.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_actor.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_counters.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent_state.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/disk_agent.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/hash_table_storage.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/rdma_target.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/recent_blocks_tracker.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/spdk_initializer.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/storage_initializer.cpp
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/storage_with_stats.cpp
)
generate_enum_serilization(libs-storage-disk_agent
  ${CMAKE_SOURCE_DIR}/cloud/blockstore/libs/storage/disk_agent/recent_blocks_tracker.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/disk_agent/recent_blocks_tracker.h
)
