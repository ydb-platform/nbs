# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(ut)

add_library(storage-partition-model)


target_link_libraries(storage-partition-model PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  blockstore-libs-common
  libs-storage-core
  libs-storage-protos
  core-libs-common
  core-libs-tablet
  cpp-protobuf-json
)

target_sources(storage-partition-model PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/barrier.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/blob_index.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/blob_to_confirm.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/block_index.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/block_mask.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/block.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/checkpoint.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/cleanup_queue.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/commit_queue.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/compaction_map_load_state.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/fresh_blob.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/garbage_queue.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/mixed_index_cache.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/operation_status.cpp
)


generate_enum_serilization(storage-partition-model
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/mixed_index_cache.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/partition/model/mixed_index_cache.h
)

generate_enum_serilization(storage-partition-model
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition/model/operation_status.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/partition/model/operation_status.h
)
