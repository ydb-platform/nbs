# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(model)
add_subdirectory(ut)

add_library(libs-storage-partition_common)


target_link_libraries(libs-storage-partition_common PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  blockstore-libs-diagnostics
  blockstore-libs-kikimr
  libs-storage-core
  storage-partition_common-model
  core-libs-common
  core-libs-kikimr
  library-actors-core
  ydb-core-base
)

target_sources(libs-storage-partition_common PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/actor_checkrange.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/actor_read_blob.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/actor_describe_base_disk_blocks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/actor_loadfreshblobs.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/actor_trimfreshlog.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/drain_actor_companion.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/long_running_operation_companion.cpp
)


generate_enum_serilization(libs-storage-partition_common
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/partition_common/events_private.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/partition_common/events_private.h
)
