# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

add_library(blockstore-libs-storage-testlib)


target_compile_options(blockstore-libs-storage-testlib PRIVATE
  -DUSE_CURRENT_UDF_ABI_VERSION
)

target_link_libraries(blockstore-libs-storage-testlib PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  blockstore-libs-diagnostics
  blockstore-libs-discovery
  blockstore-libs-endpoints
  blockstore-libs-kikimr
  blockstore-libs-service
  libs-storage-api
  libs-storage-core
  libs-storage-service
  libs-storage-ss_proxy
  libs-storage-stats_service
  libs-storage-undelivered
  libs-storage-volume
  libs-storage-volume_balancer
  libs-storage-volume_proxy
  blockstore-libs-ydbstats
  public-api-protos
  core-libs-api
  core-libs-hive_proxy
  ydb-core-base
  ydb-core-blobstorage
  core-blockstore-core
  core-client-minikql_compile
  ydb-core-kqp
  ydb-core-mind
  core-mind-bscontroller
  core-mind-hive
  ydb-core-protos
  ydb-core-security
  ydb-core-tablet_flat
  test-libs-table
  ydb-core-testlib
  core-testlib-actors
  core-testlib-basics
  core-tx-coordinator
  core-tx-mediator
  core-tx-schemeshard
  core-tx-tx_allocator
  core-tx-tx_proxy
  library-actors-core
  cpp-testing-unittest
)

target_sources(blockstore-libs-storage-testlib PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/counters_printer.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/diagnostics.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/disk_agent_mock.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/disk_registry_proxy_mock.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/root_kms_key_provider_mock.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/service_client.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/ss_proxy_client.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/ss_proxy_mock.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/test_env.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/test_env_state.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/test_executor.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/test_runtime.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/test_tablet.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/testlib/ut_helpers.cpp
)

