# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(ut)
add_subdirectory(benchmark)

add_library(libs-storage-core)


target_link_libraries(libs-storage-core PUBLIC
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  cloud-blockstore-config
  blockstore-libs-common
  blockstore-libs-diagnostics
  blockstore-libs-kikimr
  blockstore-libs-service
  libs-storage-api
  libs-storage-model
  libs-storage-protos
  public-api-protos
  storage-core-config
  core-libs-common
  core-libs-diagnostics
  core-libs-features
  core-libs-kikimr
  contrib-libs-openssl
  library-actors-core
  library-cpp-cgiparam
  cpp-containers-intrusive_rb_tree
  cpp-deprecated-atomic
  library-cpp-logger
  library-cpp-lwtrace
  monlib-service-pages
  cpp-openssl-crypto
  cpp-protobuf-util
  cpp-string_utils-base64
  cpp-string_utils-quote
  ydb-core-base
  core-control-lib
  core-engine-minikql
  ydb-core-mon
  ydb-core-protos
  ydb-core-tablet
  ydb-core-tablet_flat
  essentials-sql-pg_dummy
)

target_sources(libs-storage-core PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/block_handler.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/compaction_map.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/compaction_options.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/compaction_policy.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/compaction_type.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/config.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/disk_counters.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/disk_validation.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/forward_helpers.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/bs_group_operation_tracker.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/manually_preempted_volumes.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/metrics.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/monitoring_utils.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/mount_token.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/pending_request.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/probes.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/proto_helpers.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/request_buffer.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/request_info.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/storage_request_counters.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/tablet.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/tablet_counters.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/tablet_schema.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/tenant.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/ts_ring_buffer.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/unimplemented.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/volume_label.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/volume_model.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/write_buffer_request.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/transaction_time_tracker.cpp
)


generate_enum_serilization(libs-storage-core
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/libs/storage/core/mount_token.h
  INCLUDE_HEADERS
  cloud/blockstore/libs/storage/core/mount_token.h
)
