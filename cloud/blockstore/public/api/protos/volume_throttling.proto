syntax = "proto3";

import "cloud/blockstore/public/api/protos/headers.proto";
import "cloud/storage/core/protos/error.proto";
import "cloud/storage/core/protos/media.proto";

package NCloud.NBlockStore.NProto;

option go_package = "github.com/ydb-platform/nbs/cloud/blockstore/public/api/protos";

////////////////////////////////////////////////////////////////////////////////
// Throttling configuration

message TVolumePerformanceProfileCoefficients {
    optional double MaxReadBandwidth = 1;
    optional double MaxPostponedWeight = 3;
    optional bool ThrottlingEnabled = 4;
    optional double MaxReadIops = 5;
    optional double BoostTime = 7;
    optional double BoostRefillTime = 8;
    optional double BoostPercentage = 9;
    optional double MaxWriteBandwidth = 10;
    optional double MaxWriteIops = 11;
    optional double BurstPercentage = 12;
}

////////////////////////////////////////////////////////////////////////////////
// Disk filtering

// AND: filter applies to disks that satisfy all the sub-filters
message TDiskFilter {
    repeated string CloudIds = 1;                             // OR: any of these clouds (empty = any cloud)
    repeated string FolderIds = 2;                            // OR: any of these folders (empty = any folder)
    repeated NCloud.NProto.EStorageMediaKind MediaKinds = 3;  // OR: any of these media kinds (empty = any kind)
}

message TSpecificDiskFilter {
    repeated string DiskIds = 1;  // OR: any of these disks (empty = no disks)
}

////////////////////////////////////////////////////////////////////////////////
// Config

message TVolumeThrottlingRule {
    oneof Selector {
        TDiskFilter Filter = 1;
        TSpecificDiskFilter Disks = 2;
    };
    TVolumePerformanceProfileCoefficients Coefficients = 3;
}

message TVolumeThrottlingConfig {
    uint32 Version = 1;
    repeated TVolumeThrottlingRule Rules = 2;
}

////////////////////////////////////////////////////////////////////////////////
// Update throttling config

message TUpdateVolumeThrottlingConfigRequest
{
    // Optional request headers.
    THeaders Headers = 1;

    TVolumeThrottlingConfig Config = 2;
}

message TUpdateVolumeThrottlingConfigResponse
{
    // Optional error, set only if error happened.
    NCloud.NProto.TError Error = 1;
}
