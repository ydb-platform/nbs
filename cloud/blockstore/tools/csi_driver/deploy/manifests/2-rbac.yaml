---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nbs-csi-node-sa
  namespace: nbs-csi-ns

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nbs-csi-controller-sa
  namespace: nbs-csi-ns

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  # Access to volumeattachments is only needed when the CSI driver
  # has the PUBLISH_UNPUBLISH_VOLUME controller capability.
  # In that case, external-provisioner will watch volumeattachments
  # to determine when it is safe to delete a volume.
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  kind: ClusterRole
  name: nbs-csi-provisioner-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-attacher-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  kind: ClusterRole
  name: nbs-csi-attacher-role
  apiGroup: rbac.authorization.k8s.io

---
# Resizer must be able to work with PVCs, PVs, SCs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-resizer-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  # If handle-volume-inuse-error=true, the pod specific rbac is needed
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-resizer-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  kind: ClusterRole
  name: nbs-csi-resizer-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-controller-deploy-role
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames:
      - nbs-csi-controller-psp

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-deploy-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nbs-csi-controller-deploy-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-node-deploy-role
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
    - nbs-csi-node-psp

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-node-node-deploy-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-node-sa
    namespace: nbs-csi-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nbs-csi-node-deploy-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-node-deploy-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nbs-csi-node-deploy-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-snapshotter-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  # Secrets resource omitted since GCE PD snapshots does not require them
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-snapshotter-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  kind: ClusterRole
  name: nbs-csi-snapshotter-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nbs-csi-leaderelection-role
  namespace: nbs-csi-ns
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nbs-csi-controller-leaderelection-binding
subjects:
  - kind: ServiceAccount
    name: nbs-csi-controller-sa
    namespace: nbs-csi-ns
roleRef:
  kind: ClusterRole
  name: nbs-csi-leaderelection-role
  apiGroup: rbac.authorization.k8s.io
