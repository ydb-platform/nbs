# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

find_package(AIO REQUIRED)

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

get_built_tool_path(
  TOOL_protoc_bin
  TOOL_protoc_dependency
  contrib/tools/protoc/bin
  protoc
)

get_built_tool_path(
  TOOL_cpp_styleguide_bin
  TOOL_cpp_styleguide_dependency
  contrib/tools/protoc/plugins/cpp_styleguide
  cpp_styleguide
)

add_executable(rdma-test)


target_link_libraries(rdma-test PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  blockstore-libs-common
  blockstore-libs-diagnostics
  libs-rdma-iface
  libs-rdma-impl
  core-libs-common
  core-libs-diagnostics
  cpp-deprecated-atomic
  library-cpp-getopt
  library-cpp-lwtrace
  cpp-lwtrace-mon
  cpp-monlib-dynamic_counters
  AIO::aio
  contrib-libs-liburing
  contrib-libs-protobuf
)

target_allocator(rdma-test
  cpp-malloc-tcmalloc
  libs-tcmalloc-no_percpu_cache
)

target_link_options(rdma-test PRIVATE
  -ldl
  -lrt
  -Wl,--no-as-needed
  -fPIC
  -fPIC
  -lrt
  -ldl
)

target_sources(rdma-test PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/app.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/bootstrap.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/initiator.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/main.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/options.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/probes.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/protocol.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/runnable.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_local_aio.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_local_uring.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_memory.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_null.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/storage_rdma.cpp
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/target.cpp
  ${PROJECT_BINARY_DIR}/cloud/blockstore/tools/testing/rdma-test/protocol.pb.h
)

target_proto_messages(rdma-test PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/protocol.proto
)


target_proto_outs(rdma-test
  --cpp_out=${PROJECT_BINARY_DIR}/
  --cpp_styleguide_out=${PROJECT_BINARY_DIR}/
)

target_proto_addincls(rdma-test
  ./
  ${PROJECT_SOURCE_DIR}/
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
)

generate_enum_serilization(rdma-test
  ${PROJECT_SOURCE_DIR}/cloud/blockstore/tools/testing/rdma-test/options.h
  INCLUDE_HEADERS
  cloud/blockstore/tools/testing/rdma-test/options.h
)

vcs_info(rdma-test)
