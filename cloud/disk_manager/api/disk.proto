syntax = "proto3";

package cloud.disk_manager;

option go_package = "github.com/ydb-platform/nbs/cloud/disk_manager/api;disk_manager";

enum DiskKind {
    DISK_KIND_UNSPECIFIED = 0;
    DISK_KIND_SSD = 1;
    // The base storage is HDD, index is still kept on SSD.
    DISK_KIND_HDD = 2;
    DISK_KIND_SSD_NONREPLICATED = 3;
    DISK_KIND_SSD_MIRROR2 = 4;
    DISK_KIND_SSD_LOCAL = 5;
    DISK_KIND_SSD_MIRROR3 = 6;
    DISK_KIND_HDD_NONREPLICATED = 7;
    DISK_KIND_HDD_LOCAL = 8;
}

message DiskId {
    string zone_id = 1;
    string disk_id = 2;
}

message DiskPerformanceProfile {
    int64 max_read_bandwidth = 1;
    int64 max_postponed_weight = 2;
    bool throttling_enabled = 3;
    int64 max_read_iops = 4;
    int64 boost_time = 5;
    int64 boost_refill_time = 6;
    int64 boost_percentage = 7;
    int64 max_write_bandwidth = 8;
    int64 max_write_iops = 9;
    int64 burst_percentage = 10;
}

message DiskModel {
    int64 block_size = 1;
    int64 size = 2;
    int64 channels_count = 3;
    DiskKind kind = 4;
    DiskPerformanceProfile performance_profile = 5;
    int64 merged_channels_count = 6;
    int64 mixed_channels_count = 7;
}

enum EncryptionMode {
    NO_ENCRYPTION = 0;

    // Encryption with a user provided key.
    ENCRYPTION_AES_XTS = 1;

    // Encryption with a Root KMS provided key.
    ENCRYPTION_AT_REST = 2;
}

message KmsKey {
    string kek_id = 1;
    bytes encrypted_dek = 2;
    string task_id = 3;
}

message EncryptionDesc {
    EncryptionMode mode = 1;
    oneof key {
        bytes key_hash = 2;
        KmsKey kms_key = 3;
    }
}

message DiskStats {
    int64 storage_size = 1;
}

message DiskParams {
    int64 block_size = 1;
    int64 size = 2;
    string cloud_id = 3;
    string folder_id = 4;
}
