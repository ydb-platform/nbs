# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(bench)
add_subdirectory(ut)

add_library(storage-tablet-model)


target_link_libraries(storage-tablet-model PUBLIC
  contrib-libs-cxxsupp
  yutil
  tools-enum_parser-enum_serialization_runtime
  filestore-libs-diagnostics-events
  filestore-libs-storage-api
  filestore-libs-storage-model
  filestore-private-api-protos
  core-libs-common
  libs-tablet-model
  core-libs-throttling
  cpp-containers-intrusive_rb_tree
  cpp-containers-stack_vector
)

target_sources(storage-tablet-model PRIVATE
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/alloc.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/binary_reader.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/binary_writer.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/blob.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/blob_builder.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/block.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/block_list.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/block_list_decode.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/block_list_encode.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/block_list_spec.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/channels.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/compaction_map.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/deletion_markers.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/fresh_blocks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/fresh_bytes.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/garbage_queue.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/group_by.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/large_blocks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/mixed_blocks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/node_index_cache.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/node_ref.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/node_session_stat.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/operation.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/profile_log_events.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/range_locks.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/read_ahead.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/shard_balancer.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/sparse_segment.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/split_range.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/throttler_logger.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/throttling_policy.cpp
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/truncate_queue.cpp
)


generate_enum_serilization(storage-tablet-model
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/alloc.h
  INCLUDE_HEADERS
  cloud/filestore/libs/storage/tablet/model/alloc.h
)

generate_enum_serilization(storage-tablet-model
  ${PROJECT_SOURCE_DIR}/cloud/filestore/libs/storage/tablet/model/range_locks.h
  INCLUDE_HEADERS
  cloud/filestore/libs/storage/tablet/model/range_locks.h
)
