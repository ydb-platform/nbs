syntax = "proto2";

package NCloud.NFileStore.NProto;

option go_package = "github.com/ydb-platform/nbs/cloud/filestore/config";

////////////////////////////////////////////////////////////////////////////////

message TFileSystemConfig
{
    // FileSystem identifier.
    optional string FileSystemId = 1;

    // Filesystem blocksize.
    optional uint32 BlockSize = 2;

    // Keep attempts to acquire lock.
    optional uint32 LockRetryTimeout = 3;

    // Inode entry timeout.
    optional uint32 EntryTimeout = 4;
    // Node attributes timeout.
    optional uint32 AttrTimeout = 5;

    // X Attrs cache limits
    optional uint32 XAttrCacheLimit = 6;
    optional uint32 XAttrCacheTimeout = 7;

    // Filesystem max buffer size per request.
    optional uint32 MaxBufferSize = 8;

    // Inode entry timeout for negative responses (responses with errors).
    // The most notable one is ENOENT for getattr.
    optional uint32 NegativeEntryTimeout = 9;

    // The blocksize reported to the client via stat request. Note: this value
    // can differ from the BlockSize in terms of the actual filestore
    optional uint32 PreferredBlockSize = 10;

    // Async processing of destroy handle requests.
    optional bool AsyncDestroyHandleEnabled = 11;

    // Period of processing create/destroy handle requests.
    optional uint32 AsyncHandleOperationPeriod = 12;

    // Enable O_DIRECT when working with files
    optional bool DirectIoEnabled = 13;

    // Aligment needed for buffers when using direct io
    optional uint32 DirectIoAlign = 14;

    // Enable write-back cache on guest (FUSE client)
    optional bool GuestWriteBackCacheEnabled = 15;

    // Enable zero copy for read/write requests
    optional bool ZeroCopyEnabled = 16;

    // Guest (FUSE client) will use direct IO for read/write requests
    // regardless of whether file is opened with O_DIRECT or not
    optional bool GuestPageCacheDisabled = 17;

    // Don't support extended attributes
    optional bool ExtendedAttributesDisabled = 18;

    // Enable write-back cache on FUSE server
    optional bool ServerWriteBackCacheEnabled = 19;

    // Allow to set keep_cache flag on file open if allowed by tablet
    optional bool GuestKeepCacheAllowed = 20;

    // Create parentless files only. Meaning that files will be created
    // without any reference to parent directory.
    optional bool ParentlessFilesOnly = 21;

    // Allow handleless IO operations. If set, the service will infer the shard
    // number from the nodeId in case of an invalid handle, rather than from the
    // handle itself.
    optional bool AllowHandlelessIO = 22;
}
