syntax = "proto3";
option cc_enable_arenas = true;

package FQHttp;

import "ydb/public/api/protos/ydb_issue_message.proto";
import "ydb/public/api/protos/ydb_value.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "ydb/public/api/protos/draft/fq.proto";

////////////////////////////////////////////////////////////

message IssueMessage {
    Ydb.Issue.IssueMessage.Position position = 1;
    string message = 2;
    Ydb.Issue.IssueMessage.Position end_position = 3;
    uint32 issue_code = 4;
    string severity = 5;
    repeated IssueMessage issues = 6;
}

message Error {
    int32 status = 1;
    string message = 2;
    repeated IssueMessage details = 3;
}

message QueryMeta {
    google.protobuf.Timestamp started_at = 2;
    google.protobuf.Timestamp finished_at = 3;
}

message Column {
    string name = 1;
    string type = 2;
}

message ResultSetMeta {
    google.protobuf.Int64Value rows_count = 1;
    google.protobuf.BoolValue truncated = 2;
}

message CreateQueryRequest {
    FederatedQuery.QueryContent.QueryType type = 1;
    string name = 2;
    string text = 3;
    string description = 4;
}

message CreateQueryResult {
    string id = 1;
}

message GetQueryRequest {
    string query_id = 1;
}

message GetQueryResult {
    enum ComputeStatus {
        COMPUTE_STATUS_UNSPECIFIED = 0;
        RUNNING = 1;
        COMPLETED = 2;
        FAILED = 3;
    }

    google.protobuf.StringValue id = 1;
    FederatedQuery.QueryContent.QueryType type = 2;
    google.protobuf.StringValue name = 3;
    google.protobuf.StringValue description = 4;
    ComputeStatus status = 5;
    google.protobuf.StringValue text = 6;
    QueryMeta meta = 7;
    Error issues = 8;
    repeated ResultSetMeta result_sets = 9;
}

message GetQueryStatusRequest {
    string query_id = 1;
}

message GetQueryStatusResult {
    GetQueryResult.ComputeStatus status = 1;
}

message DeleteQueryRequest {
    string query_id = 1;
}

message DeleteQueryResult {
}

message StopQueryRequest {
    string query_id = 1;
}

message StopQueryResult {
}

message GetResultDataRequest {
    string query_id = 1;
    int32 result_set_index = 2;
    int64 offset = 3;
    int64 limit = 4;
}

message GetResultDataResult {
    Ydb.ResultSet result_set = 1;
}
