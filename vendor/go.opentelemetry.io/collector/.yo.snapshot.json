{
    "Version": "v0.85.0",
    "GoVersion": "1.20",
    "Sum": "h1:I037iYQ2FlAOKmaesT5Hgy7VazJO5oO4rcHSgc1+K8A=",
    "Packages": {
        "go.opentelemetry.io/collector/client": {
            "Imports": [
                "context",
                "net",
                "strings"
            ],
            "TestImports": [
                "context",
                "fmt",
                "github.com/stretchr/testify/assert",
                "go.opentelemetry.io/collector/client",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "net",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/cgroups": {
            "Imports": [
                "bufio",
                "fmt",
                "io",
                "os",
                "path/filepath",
                "strconv",
                "strings"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "os",
                "path/filepath",
                "strconv",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/fanoutconsumer": {
            "Imports": [
                "context",
                "fmt",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/pdata/plog",
                "go.opentelemetry.io/collector/pdata/pmetric",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "go.uber.org/multierr"
            ],
            "TestImports": [
                "context",
                "errors",
                "fmt",
                "github.com/stretchr/testify/assert",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/consumer/consumertest",
                "go.opentelemetry.io/collector/internal/testdata",
                "go.opentelemetry.io/collector/pdata/plog",
                "go.opentelemetry.io/collector/pdata/pmetric",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "strconv",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/iruntime": {
            "Imports": [
                "github.com/shirou/gopsutil/v3/mem",
                "go.opentelemetry.io/collector/internal/cgroups"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/obsreportconfig": {
            "Imports": [
                "go.opencensus.io/stats",
                "go.opencensus.io/stats/view",
                "go.opencensus.io/tag",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/featuregate",
                "go.opentelemetry.io/collector/internal/obsreportconfig/obsmetrics"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/obsreportconfig/obsmetrics": {
            "Imports": [
                "go.opencensus.io/stats",
                "go.opencensus.io/tag"
            ],
            "TestImports": null
        },
        "go.opentelemetry.io/collector/internal/sharedcomponent": {
            "Imports": [
                "context",
                "go.opentelemetry.io/collector/component",
                "sync"
            ],
            "TestImports": [
                "context",
                "errors",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/internal/testdata": {
            "Imports": [
                "go.opentelemetry.io/collector/pdata/pcommon",
                "go.opentelemetry.io/collector/pdata/plog",
                "go.opentelemetry.io/collector/pdata/pmetric",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "time"
            ],
            "TestImports": null
        },
        "go.opentelemetry.io/collector/internal/testutil": {
            "Imports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/service/telemetry",
                "net",
                "os/exec",
                "runtime",
                "strconv",
                "strings",
                "testing"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "net",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/obsreport": {
            "Imports": [
                "context",
                "errors",
                "go.opencensus.io/stats",
                "go.opencensus.io/tag",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "go.opentelemetry.io/collector/internal/obsreportconfig/obsmetrics",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/receiver/scrapererror",
                "go.opentelemetry.io/otel/attribute",
                "go.opentelemetry.io/otel/codes",
                "go.opentelemetry.io/otel/metric",
                "go.opentelemetry.io/otel/sdk/metric",
                "go.opentelemetry.io/otel/trace",
                "go.uber.org/multierr",
                "go.uber.org/zap",
                "strings"
            ],
            "TestImports": [
                "context",
                "errors",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/internal/obsreportconfig/obsmetrics",
                "go.opentelemetry.io/collector/obsreport/obsreporttest",
                "go.opentelemetry.io/collector/receiver/scrapererror",
                "go.opentelemetry.io/otel/attribute",
                "go.opentelemetry.io/otel/codes",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/obsreport/obsreporttest": {
            "Imports": [
                "context",
                "contrib.go.opencensus.io/exporter/prometheus",
                "fmt",
                "github.com/prometheus/client_golang/prometheus",
                "github.com/prometheus/client_model/go",
                "github.com/prometheus/common/expfmt",
                "go.opencensus.io/stats/view",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/receiver/receivertest",
                "go.opentelemetry.io/otel/attribute",
                "go.opentelemetry.io/otel/exporters/prometheus",
                "go.opentelemetry.io/otel/sdk/metric",
                "go.opentelemetry.io/otel/sdk/resource",
                "go.opentelemetry.io/otel/sdk/trace",
                "go.opentelemetry.io/otel/sdk/trace/tracetest",
                "go.uber.org/multierr",
                "math",
                "net/http",
                "net/http/httptest"
            ],
            "TestImports": [
                "context",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/obsreport",
                "go.opentelemetry.io/collector/obsreport/obsreporttest",
                "go.opentelemetry.io/otel/attribute",
                "net/http",
                "os",
                "path/filepath",
                "strings",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/otelcol": {
            "Imports": [
                "context",
                "errors",
                "flag",
                "fmt",
                "github.com/spf13/cobra",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/confmap/converter/expandconverter",
                "go.opentelemetry.io/collector/confmap/provider/envprovider",
                "go.opentelemetry.io/collector/confmap/provider/fileprovider",
                "go.opentelemetry.io/collector/confmap/provider/httpprovider",
                "go.opentelemetry.io/collector/confmap/provider/httpsprovider",
                "go.opentelemetry.io/collector/confmap/provider/yamlprovider",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/featuregate",
                "go.opentelemetry.io/collector/otelcol/internal/configunmarshaler",
                "go.opentelemetry.io/collector/otelcol/internal/grpclog",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/service",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.uber.org/multierr",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "golang.org/x/sys/windows/svc",
                "golang.org/x/sys/windows/svc/eventlog",
                "gopkg.in/yaml.v3",
                "os",
                "os/signal",
                "strings",
                "sync/atomic",
                "syscall",
                "time"
            ],
            "TestImports": [
                "bytes",
                "context",
                "errors",
                "fmt",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/confmap/converter/expandconverter",
                "go.opentelemetry.io/collector/confmap/provider/fileprovider",
                "go.opentelemetry.io/collector/confmap/provider/yamlprovider",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/extension/extensiontest",
                "go.opentelemetry.io/collector/featuregate",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/receiver/receivertest",
                "go.opentelemetry.io/collector/service",
                "go.opentelemetry.io/collector/service/pipelines",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "golang.org/x/sys/windows/svc",
                "gopkg.in/yaml.v3",
                "os",
                "path/filepath",
                "strings",
                "sync",
                "syscall",
                "testing",
                "time"
            ]
        },
        "go.opentelemetry.io/collector/otelcol/internal/configunmarshaler": {
            "Imports": [
                "fmt",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/confmap",
                "reflect"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/extension/extensiontest",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver/receivertest",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/otelcol/internal/grpclog": {
            "Imports": [
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "go.uber.org/zap/zapgrpc",
                "google.golang.org/grpc/grpclog"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/otelcol/otelcoltest": {
            "Imports": [
                "context",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/confmap/converter/expandconverter",
                "go.opentelemetry.io/collector/confmap/provider/envprovider",
                "go.opentelemetry.io/collector/confmap/provider/fileprovider",
                "go.opentelemetry.io/collector/confmap/provider/httpprovider",
                "go.opentelemetry.io/collector/confmap/provider/yamlprovider",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/extension/extensiontest",
                "go.opentelemetry.io/collector/otelcol",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/receiver/receivertest"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/service/pipelines",
                "path/filepath",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service": {
            "Imports": [
                "context",
                "contrib.go.opencensus.io/exporter/prometheus",
                "errors",
                "fmt",
                "github.com/google/uuid",
                "github.com/prometheus/client_golang/prometheus",
                "go.opencensus.io/metric",
                "go.opencensus.io/metric/metricproducer",
                "go.opencensus.io/stats/view",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/featuregate",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "go.opentelemetry.io/collector/pdata/pcommon",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/semconv/v1.18.0",
                "go.opentelemetry.io/collector/service/extensions",
                "go.opentelemetry.io/collector/service/internal/graph",
                "go.opentelemetry.io/collector/service/internal/proctelemetry",
                "go.opentelemetry.io/collector/service/internal/zpages",
                "go.opentelemetry.io/collector/service/pipelines",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.opentelemetry.io/contrib/propagators/b3",
                "go.opentelemetry.io/otel",
                "go.opentelemetry.io/otel/attribute",
                "go.opentelemetry.io/otel/metric",
                "go.opentelemetry.io/otel/metric/noop",
                "go.opentelemetry.io/otel/propagation",
                "go.opentelemetry.io/otel/sdk/metric",
                "go.opentelemetry.io/otel/sdk/resource",
                "go.opentelemetry.io/otel/sdk/trace",
                "go.opentelemetry.io/otel/trace",
                "go.uber.org/multierr",
                "go.uber.org/zap",
                "net",
                "net/http",
                "path",
                "runtime",
                "strconv",
                "strings",
                "time",
                "unicode"
            ],
            "TestImports": [
                "bufio",
                "context",
                "errors",
                "fmt",
                "github.com/prometheus/client_model/go",
                "github.com/prometheus/common/expfmt",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opencensus.io/stats",
                "go.opencensus.io/stats/view",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/config/confignet",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/extension/extensiontest",
                "go.opentelemetry.io/collector/extension/zpagesextension",
                "go.opentelemetry.io/collector/internal/testutil",
                "go.opentelemetry.io/collector/pdata/pcommon",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver/receivertest",
                "go.opentelemetry.io/collector/semconv/v1.18.0",
                "go.opentelemetry.io/collector/service/extensions",
                "go.opentelemetry.io/collector/service/internal/proctelemetry",
                "go.opentelemetry.io/collector/service/pipelines",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.opentelemetry.io/otel/metric",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "net/http",
                "net/http/httptest",
                "strings",
                "sync",
                "testing",
                "time"
            ]
        },
        "go.opentelemetry.io/collector/service/extensions": {
            "Imports": [
                "context",
                "fmt",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/service/internal/components",
                "go.opentelemetry.io/collector/service/internal/zpages",
                "go.uber.org/multierr",
                "net/http",
                "sort"
            ],
            "TestImports": [
                "context",
                "errors",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/extension",
                "go.opentelemetry.io/collector/extension/extensiontest",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/capabilityconsumer": {
            "Imports": [
                "go.opentelemetry.io/collector/consumer"
            ],
            "TestImports": [
                "context",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/consumer/consumertest",
                "go.opentelemetry.io/collector/internal/testdata",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/components": {
            "Imports": [
                "go.opentelemetry.io/collector/component",
                "go.uber.org/zap",
                "net/http"
            ],
            "TestImports": [
                "errors",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore",
                "go.uber.org/zap/zaptest/observer",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/graph": {
            "Imports": [
                "context",
                "errors",
                "fmt",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/internal/fanoutconsumer",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/service/internal/capabilityconsumer",
                "go.opentelemetry.io/collector/service/internal/components",
                "go.opentelemetry.io/collector/service/internal/zpages",
                "go.opentelemetry.io/collector/service/pipelines",
                "go.uber.org/multierr",
                "gonum.org/v1/gonum/graph",
                "gonum.org/v1/gonum/graph/simple",
                "gonum.org/v1/gonum/graph/topo",
                "hash/fnv",
                "net/http",
                "sort",
                "strings"
            ],
            "TestImports": [
                "context",
                "errors",
                "fmt",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/consumer/consumertest",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/exporter/exportertest",
                "go.opentelemetry.io/collector/internal/testdata",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/processor/processortest",
                "go.opentelemetry.io/collector/receiver",
                "go.opentelemetry.io/collector/receiver/receivertest",
                "go.opentelemetry.io/collector/service/internal/testcomponents",
                "go.opentelemetry.io/collector/service/pipelines",
                "gonum.org/v1/gonum/graph/simple",
                "sync",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/proctelemetry": {
            "Imports": [
                "context",
                "encoding/json",
                "errors",
                "fmt",
                "github.com/prometheus/client_golang/prometheus",
                "github.com/prometheus/client_golang/prometheus/promhttp",
                "github.com/shirou/gopsutil/v3/common",
                "github.com/shirou/gopsutil/v3/process",
                "go.opencensus.io/metric",
                "go.opencensus.io/stats",
                "go.opentelemetry.io/collector/obsreport",
                "go.opentelemetry.io/collector/semconv/v1.18.0",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.opentelemetry.io/otel/attribute",
                "go.opentelemetry.io/otel/bridge/opencensus",
                "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc",
                "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp",
                "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc",
                "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp",
                "go.opentelemetry.io/otel/exporters/prometheus",
                "go.opentelemetry.io/otel/exporters/stdout/stdoutmetric",
                "go.opentelemetry.io/otel/exporters/stdout/stdouttrace",
                "go.opentelemetry.io/otel/metric",
                "go.opentelemetry.io/otel/sdk/instrumentation",
                "go.opentelemetry.io/otel/sdk/metric",
                "go.opentelemetry.io/otel/sdk/resource",
                "go.opentelemetry.io/otel/sdk/trace",
                "go.uber.org/multierr",
                "net/http",
                "net/url",
                "os",
                "runtime",
                "strings",
                "sync",
                "time"
            ],
            "TestImports": [
                "context",
                "errors",
                "github.com/prometheus/client_golang/prometheus",
                "github.com/prometheus/client_golang/prometheus/promhttp",
                "github.com/prometheus/client_model/go",
                "github.com/prometheus/common/expfmt",
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opencensus.io/metric",
                "go.opencensus.io/metric/metricdata",
                "go.opencensus.io/stats/view",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "go.opentelemetry.io/collector/service/telemetry",
                "go.opentelemetry.io/otel/exporters/prometheus",
                "go.opentelemetry.io/otel/metric/noop",
                "go.opentelemetry.io/otel/sdk/metric",
                "go.opentelemetry.io/otel/sdk/resource",
                "net/http",
                "net/http/httptest",
                "net/url",
                "strings",
                "testing",
                "time"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/testcomponents": {
            "Imports": [
                "context",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/connector",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/exporter",
                "go.opentelemetry.io/collector/internal/testdata",
                "go.opentelemetry.io/collector/pdata/plog",
                "go.opentelemetry.io/collector/pdata/pmetric",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "go.opentelemetry.io/collector/processor",
                "go.opentelemetry.io/collector/receiver"
            ],
            "TestImports": [
                "context",
                "github.com/stretchr/testify/assert",
                "go.opentelemetry.io/collector/component",
                "go.opentelemetry.io/collector/component/componenttest",
                "go.opentelemetry.io/collector/connector/connectortest",
                "go.opentelemetry.io/collector/consumer",
                "go.opentelemetry.io/collector/consumer/consumertest",
                "go.opentelemetry.io/collector/internal/fanoutconsumer",
                "go.opentelemetry.io/collector/internal/testdata",
                "go.opentelemetry.io/collector/pdata/plog",
                "go.opentelemetry.io/collector/pdata/pmetric",
                "go.opentelemetry.io/collector/pdata/ptrace",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/internal/zpages": {
            "Imports": [
                "embed",
                "html/template",
                "io",
                "log"
            ],
            "TestImports": [
                "bytes",
                "github.com/stretchr/testify/assert",
                "html/template",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/pipelines": {
            "Imports": [
                "errors",
                "fmt",
                "go.opentelemetry.io/collector/component"
            ],
            "TestImports": [
                "errors",
                "fmt",
                "github.com/stretchr/testify/assert",
                "go.opentelemetry.io/collector/component",
                "testing"
            ]
        },
        "go.opentelemetry.io/collector/service/telemetry": {
            "Imports": [
                "context",
                "encoding/json",
                "fmt",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "go.opentelemetry.io/otel/sdk/trace",
                "go.opentelemetry.io/otel/trace",
                "go.uber.org/multierr",
                "go.uber.org/zap",
                "go.uber.org/zap/zapcore"
            ],
            "TestImports": [
                "github.com/stretchr/testify/assert",
                "github.com/stretchr/testify/require",
                "go.opentelemetry.io/collector/config/configtelemetry",
                "go.opentelemetry.io/collector/confmap",
                "go.opentelemetry.io/collector/featuregate",
                "go.opentelemetry.io/collector/internal/obsreportconfig",
                "testing"
            ]
        }
    }
}