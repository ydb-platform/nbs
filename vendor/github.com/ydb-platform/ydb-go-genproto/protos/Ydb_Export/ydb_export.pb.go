// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: protos/ydb_export.proto

package Ydb_Export

import (
	_ "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportProgress_Progress int32

const (
	ExportProgress_PROGRESS_UNSPECIFIED   ExportProgress_Progress = 0
	ExportProgress_PROGRESS_PREPARING     ExportProgress_Progress = 1
	ExportProgress_PROGRESS_TRANSFER_DATA ExportProgress_Progress = 2
	ExportProgress_PROGRESS_DONE          ExportProgress_Progress = 3
	ExportProgress_PROGRESS_CANCELLATION  ExportProgress_Progress = 4
	ExportProgress_PROGRESS_CANCELLED     ExportProgress_Progress = 5
)

// Enum value maps for ExportProgress_Progress.
var (
	ExportProgress_Progress_name = map[int32]string{
		0: "PROGRESS_UNSPECIFIED",
		1: "PROGRESS_PREPARING",
		2: "PROGRESS_TRANSFER_DATA",
		3: "PROGRESS_DONE",
		4: "PROGRESS_CANCELLATION",
		5: "PROGRESS_CANCELLED",
	}
	ExportProgress_Progress_value = map[string]int32{
		"PROGRESS_UNSPECIFIED":   0,
		"PROGRESS_PREPARING":     1,
		"PROGRESS_TRANSFER_DATA": 2,
		"PROGRESS_DONE":          3,
		"PROGRESS_CANCELLATION":  4,
		"PROGRESS_CANCELLED":     5,
	}
)

func (x ExportProgress_Progress) Enum() *ExportProgress_Progress {
	p := new(ExportProgress_Progress)
	*p = x
	return p
}

func (x ExportProgress_Progress) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportProgress_Progress) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_export_proto_enumTypes[0].Descriptor()
}

func (ExportProgress_Progress) Type() protoreflect.EnumType {
	return &file_protos_ydb_export_proto_enumTypes[0]
}

func (x ExportProgress_Progress) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportProgress_Progress.Descriptor instead.
func (ExportProgress_Progress) EnumDescriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{0, 0}
}

type ExportToS3Settings_Scheme int32

const (
	ExportToS3Settings_UNSPECIFIED ExportToS3Settings_Scheme = 0
	ExportToS3Settings_HTTP        ExportToS3Settings_Scheme = 1
	ExportToS3Settings_HTTPS       ExportToS3Settings_Scheme = 2
)

// Enum value maps for ExportToS3Settings_Scheme.
var (
	ExportToS3Settings_Scheme_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "HTTP",
		2: "HTTPS",
	}
	ExportToS3Settings_Scheme_value = map[string]int32{
		"UNSPECIFIED": 0,
		"HTTP":        1,
		"HTTPS":       2,
	}
)

func (x ExportToS3Settings_Scheme) Enum() *ExportToS3Settings_Scheme {
	p := new(ExportToS3Settings_Scheme)
	*p = x
	return p
}

func (x ExportToS3Settings_Scheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportToS3Settings_Scheme) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_export_proto_enumTypes[1].Descriptor()
}

func (ExportToS3Settings_Scheme) Type() protoreflect.EnumType {
	return &file_protos_ydb_export_proto_enumTypes[1]
}

func (x ExportToS3Settings_Scheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportToS3Settings_Scheme.Descriptor instead.
func (ExportToS3Settings_Scheme) EnumDescriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{7, 0}
}

type ExportToS3Settings_StorageClass int32

const (
	ExportToS3Settings_STORAGE_CLASS_UNSPECIFIED ExportToS3Settings_StorageClass = 0
	ExportToS3Settings_STANDARD                  ExportToS3Settings_StorageClass = 1
	ExportToS3Settings_REDUCED_REDUNDANCY        ExportToS3Settings_StorageClass = 2
	ExportToS3Settings_STANDARD_IA               ExportToS3Settings_StorageClass = 3
	ExportToS3Settings_ONEZONE_IA                ExportToS3Settings_StorageClass = 4
	ExportToS3Settings_INTELLIGENT_TIERING       ExportToS3Settings_StorageClass = 5
	ExportToS3Settings_GLACIER                   ExportToS3Settings_StorageClass = 6
	ExportToS3Settings_DEEP_ARCHIVE              ExportToS3Settings_StorageClass = 7
	ExportToS3Settings_OUTPOSTS                  ExportToS3Settings_StorageClass = 8
)

// Enum value maps for ExportToS3Settings_StorageClass.
var (
	ExportToS3Settings_StorageClass_name = map[int32]string{
		0: "STORAGE_CLASS_UNSPECIFIED",
		1: "STANDARD",
		2: "REDUCED_REDUNDANCY",
		3: "STANDARD_IA",
		4: "ONEZONE_IA",
		5: "INTELLIGENT_TIERING",
		6: "GLACIER",
		7: "DEEP_ARCHIVE",
		8: "OUTPOSTS",
	}
	ExportToS3Settings_StorageClass_value = map[string]int32{
		"STORAGE_CLASS_UNSPECIFIED": 0,
		"STANDARD":                  1,
		"REDUCED_REDUNDANCY":        2,
		"STANDARD_IA":               3,
		"ONEZONE_IA":                4,
		"INTELLIGENT_TIERING":       5,
		"GLACIER":                   6,
		"DEEP_ARCHIVE":              7,
		"OUTPOSTS":                  8,
	}
)

func (x ExportToS3Settings_StorageClass) Enum() *ExportToS3Settings_StorageClass {
	p := new(ExportToS3Settings_StorageClass)
	*p = x
	return p
}

func (x ExportToS3Settings_StorageClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportToS3Settings_StorageClass) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_export_proto_enumTypes[2].Descriptor()
}

func (ExportToS3Settings_StorageClass) Type() protoreflect.EnumType {
	return &file_protos_ydb_export_proto_enumTypes[2]
}

func (x ExportToS3Settings_StorageClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportToS3Settings_StorageClass.Descriptor instead.
func (ExportToS3Settings_StorageClass) EnumDescriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{7, 1}
}

// / Common
type ExportProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportProgress) Reset() {
	*x = ExportProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProgress) ProtoMessage() {}

func (x *ExportProgress) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProgress.ProtoReflect.Descriptor instead.
func (*ExportProgress) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{0}
}

type ExportItemProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartsTotal     uint32                 `protobuf:"varint,1,opt,name=parts_total,json=partsTotal,proto3" json:"parts_total,omitempty"`
	PartsCompleted uint32                 `protobuf:"varint,2,opt,name=parts_completed,json=partsCompleted,proto3" json:"parts_completed,omitempty"`
	StartTime      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ExportItemProgress) Reset() {
	*x = ExportItemProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportItemProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportItemProgress) ProtoMessage() {}

func (x *ExportItemProgress) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportItemProgress.ProtoReflect.Descriptor instead.
func (*ExportItemProgress) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{1}
}

func (x *ExportItemProgress) GetPartsTotal() uint32 {
	if x != nil {
		return x.PartsTotal
	}
	return 0
}

func (x *ExportItemProgress) GetPartsCompleted() uint32 {
	if x != nil {
		return x.PartsCompleted
	}
	return 0
}

func (x *ExportItemProgress) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ExportItemProgress) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// / YT
type ExportToYtSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host            string                     `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port            uint32                     `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Token           string                     `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Items           []*ExportToYtSettings_Item `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Description     string                     `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfRetries uint32                     `protobuf:"varint,6,opt,name=number_of_retries,json=numberOfRetries,proto3" json:"number_of_retries,omitempty"`
	UseTypeV3       bool                       `protobuf:"varint,7,opt,name=use_type_v3,json=useTypeV3,proto3" json:"use_type_v3,omitempty"`
}

func (x *ExportToYtSettings) Reset() {
	*x = ExportToYtSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtSettings) ProtoMessage() {}

func (x *ExportToYtSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtSettings.ProtoReflect.Descriptor instead.
func (*ExportToYtSettings) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{2}
}

func (x *ExportToYtSettings) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ExportToYtSettings) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ExportToYtSettings) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ExportToYtSettings) GetItems() []*ExportToYtSettings_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExportToYtSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExportToYtSettings) GetNumberOfRetries() uint32 {
	if x != nil {
		return x.NumberOfRetries
	}
	return 0
}

func (x *ExportToYtSettings) GetUseTypeV3() bool {
	if x != nil {
		return x.UseTypeV3
	}
	return false
}

type ExportToYtResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportToYtResult) Reset() {
	*x = ExportToYtResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtResult) ProtoMessage() {}

func (x *ExportToYtResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtResult.ProtoReflect.Descriptor instead.
func (*ExportToYtResult) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{3}
}

type ExportToYtMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings      *ExportToYtSettings     `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	Progress      ExportProgress_Progress `protobuf:"varint,2,opt,name=progress,proto3,enum=Ydb.Export.ExportProgress_Progress" json:"progress,omitempty"`
	ItemsProgress []*ExportItemProgress   `protobuf:"bytes,3,rep,name=items_progress,json=itemsProgress,proto3" json:"items_progress,omitempty"`
}

func (x *ExportToYtMetadata) Reset() {
	*x = ExportToYtMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtMetadata) ProtoMessage() {}

func (x *ExportToYtMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtMetadata.ProtoReflect.Descriptor instead.
func (*ExportToYtMetadata) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{4}
}

func (x *ExportToYtMetadata) GetSettings() *ExportToYtSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ExportToYtMetadata) GetProgress() ExportProgress_Progress {
	if x != nil {
		return x.Progress
	}
	return ExportProgress_PROGRESS_UNSPECIFIED
}

func (x *ExportToYtMetadata) GetItemsProgress() []*ExportItemProgress {
	if x != nil {
		return x.ItemsProgress
	}
	return nil
}

type ExportToYtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	Settings        *ExportToYtSettings             `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ExportToYtRequest) Reset() {
	*x = ExportToYtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtRequest) ProtoMessage() {}

func (x *ExportToYtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtRequest.ProtoReflect.Descriptor instead.
func (*ExportToYtRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{5}
}

func (x *ExportToYtRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ExportToYtRequest) GetSettings() *ExportToYtSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ExportToYtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// operation.result = ExportToYtResult
	// operation.metadata = ExportToYtMetadata
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ExportToYtResponse) Reset() {
	*x = ExportToYtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtResponse) ProtoMessage() {}

func (x *ExportToYtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtResponse.ProtoReflect.Descriptor instead.
func (*ExportToYtResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{6}
}

func (x *ExportToYtResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// / S3
type ExportToS3Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string                          `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Scheme          ExportToS3Settings_Scheme       `protobuf:"varint,2,opt,name=scheme,proto3,enum=Ydb.Export.ExportToS3Settings_Scheme" json:"scheme,omitempty"` // HTTPS if not specified
	Bucket          string                          `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	AccessKey       string                          `protobuf:"bytes,4,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey       string                          `protobuf:"bytes,5,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Items           []*ExportToS3Settings_Item      `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	Description     string                          `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfRetries uint32                          `protobuf:"varint,8,opt,name=number_of_retries,json=numberOfRetries,proto3" json:"number_of_retries,omitempty"`
	StorageClass    ExportToS3Settings_StorageClass `protobuf:"varint,9,opt,name=storage_class,json=storageClass,proto3,enum=Ydb.Export.ExportToS3Settings_StorageClass" json:"storage_class,omitempty"`
	// Codec used to compress data. Codecs are available:
	// - zstd.
	// - zstd-N, where N is compression level, e.g. zstd-3.
	Compression string `protobuf:"bytes,10,opt,name=compression,proto3" json:"compression,omitempty"`
	// Region to use in requests
	Region string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`
	// disables virtual hosting style buckets aws s3 feature
	// it changes the way bucket appended to url. e.g. https//bucket_name.example.com/ vs https://example.com/bucket_name
	// details: https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html
	// it is especially useful for custom s3 implementations
	DisableVirtualAddressing bool `protobuf:"varint,12,opt,name=disable_virtual_addressing,json=disableVirtualAddressing,proto3" json:"disable_virtual_addressing,omitempty"`
}

func (x *ExportToS3Settings) Reset() {
	*x = ExportToS3Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Settings) ProtoMessage() {}

func (x *ExportToS3Settings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Settings.ProtoReflect.Descriptor instead.
func (*ExportToS3Settings) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{7}
}

func (x *ExportToS3Settings) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ExportToS3Settings) GetScheme() ExportToS3Settings_Scheme {
	if x != nil {
		return x.Scheme
	}
	return ExportToS3Settings_UNSPECIFIED
}

func (x *ExportToS3Settings) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ExportToS3Settings) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *ExportToS3Settings) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *ExportToS3Settings) GetItems() []*ExportToS3Settings_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExportToS3Settings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExportToS3Settings) GetNumberOfRetries() uint32 {
	if x != nil {
		return x.NumberOfRetries
	}
	return 0
}

func (x *ExportToS3Settings) GetStorageClass() ExportToS3Settings_StorageClass {
	if x != nil {
		return x.StorageClass
	}
	return ExportToS3Settings_STORAGE_CLASS_UNSPECIFIED
}

func (x *ExportToS3Settings) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *ExportToS3Settings) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ExportToS3Settings) GetDisableVirtualAddressing() bool {
	if x != nil {
		return x.DisableVirtualAddressing
	}
	return false
}

type ExportToS3Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportToS3Result) Reset() {
	*x = ExportToS3Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Result) ProtoMessage() {}

func (x *ExportToS3Result) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Result.ProtoReflect.Descriptor instead.
func (*ExportToS3Result) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{8}
}

type ExportToS3Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings      *ExportToS3Settings     `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	Progress      ExportProgress_Progress `protobuf:"varint,2,opt,name=progress,proto3,enum=Ydb.Export.ExportProgress_Progress" json:"progress,omitempty"`
	ItemsProgress []*ExportItemProgress   `protobuf:"bytes,3,rep,name=items_progress,json=itemsProgress,proto3" json:"items_progress,omitempty"`
}

func (x *ExportToS3Metadata) Reset() {
	*x = ExportToS3Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Metadata) ProtoMessage() {}

func (x *ExportToS3Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Metadata.ProtoReflect.Descriptor instead.
func (*ExportToS3Metadata) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{9}
}

func (x *ExportToS3Metadata) GetSettings() *ExportToS3Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ExportToS3Metadata) GetProgress() ExportProgress_Progress {
	if x != nil {
		return x.Progress
	}
	return ExportProgress_PROGRESS_UNSPECIFIED
}

func (x *ExportToS3Metadata) GetItemsProgress() []*ExportItemProgress {
	if x != nil {
		return x.ItemsProgress
	}
	return nil
}

type ExportToS3Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	Settings        *ExportToS3Settings             `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ExportToS3Request) Reset() {
	*x = ExportToS3Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Request) ProtoMessage() {}

func (x *ExportToS3Request) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Request.ProtoReflect.Descriptor instead.
func (*ExportToS3Request) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{10}
}

func (x *ExportToS3Request) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ExportToS3Request) GetSettings() *ExportToS3Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ExportToS3Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// operation.result = ExportToS3Result
	// operation.metadata = ExportToS3Metadata
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ExportToS3Response) Reset() {
	*x = ExportToS3Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Response) ProtoMessage() {}

func (x *ExportToS3Response) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Response.ProtoReflect.Descriptor instead.
func (*ExportToS3Response) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{11}
}

func (x *ExportToS3Response) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ExportToYtSettings_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Database path to a table to be exported
	SourcePath      string `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
}

func (x *ExportToYtSettings_Item) Reset() {
	*x = ExportToYtSettings_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToYtSettings_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToYtSettings_Item) ProtoMessage() {}

func (x *ExportToYtSettings_Item) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToYtSettings_Item.ProtoReflect.Descriptor instead.
func (*ExportToYtSettings_Item) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ExportToYtSettings_Item) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *ExportToYtSettings_Item) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

type ExportToS3Settings_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Database path to a table to be exported
	SourcePath string `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	// Tables are exported to one or more S3 objects.
	// The object name begins with 'destination_prefix'.
	// This prefix will be followed by '/data_PartNumber', where 'PartNumber'
	// represents the index of the part, starting at zero.
	DestinationPrefix string `protobuf:"bytes,2,opt,name=destination_prefix,json=destinationPrefix,proto3" json:"destination_prefix,omitempty"`
}

func (x *ExportToS3Settings_Item) Reset() {
	*x = ExportToS3Settings_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_export_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportToS3Settings_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportToS3Settings_Item) ProtoMessage() {}

func (x *ExportToS3Settings_Item) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_export_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportToS3Settings_Item.ProtoReflect.Descriptor instead.
func (*ExportToS3Settings_Item) Descriptor() ([]byte, []int) {
	return file_protos_ydb_export_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ExportToS3Settings_Item) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *ExportToS3Settings_Item) GetDestinationPrefix() string {
	if x != nil {
		return x.DestinationPrefix
	}
	return ""
}

var File_protos_ydb_export_proto protoreflect.FileDescriptor

var file_protos_ydb_export_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x59, 0x64, 0x62, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x52,
	0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f,
	0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0xd0, 0x01, 0x0a, 0x12,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf8,
	0x02, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x41, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x06, 0x9a, 0xe6, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x33, 0x1a, 0x5e, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd8, 0x01,
	0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x6f, 0x59, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x04, 0x90, 0xe6,
	0x2a, 0x01, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x12,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x59, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x07, 0x0a, 0x12,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01,
	0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f,
	0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x06, 0x9a, 0xe6, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xa2, 0xe6, 0x2a, 0x03, 0x18, 0x80, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x6f, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a,
	0x62, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6,
	0x2a, 0x01, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x33,
	0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01,
	0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50,
	0x53, 0x10, 0x02, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x44,
	0x55, 0x4e, 0x44, 0x41, 0x4e, 0x43, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41,
	0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x41, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e,
	0x45, 0x5a, 0x4f, 0x4e, 0x45, 0x5f, 0x49, 0x41, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e,
	0x54, 0x45, 0x4c, 0x4c, 0x49, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x45, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x4c, 0x41, 0x43, 0x49, 0x45, 0x52, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x45, 0x50, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x55, 0x54, 0x50, 0x4f, 0x53, 0x54, 0x53, 0x10, 0x08,
	0x22, 0x12, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53, 0x33, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x6f, 0x53, 0x33, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x6f, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xa1, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53, 0x33, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x42, 0x04, 0x90, 0xe6, 0x2a, 0x01, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x53,
	0x33, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x55, 0x0a, 0x15, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x59, 0x64, 0x62, 0x5f,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_ydb_export_proto_rawDescOnce sync.Once
	file_protos_ydb_export_proto_rawDescData = file_protos_ydb_export_proto_rawDesc
)

func file_protos_ydb_export_proto_rawDescGZIP() []byte {
	file_protos_ydb_export_proto_rawDescOnce.Do(func() {
		file_protos_ydb_export_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_ydb_export_proto_rawDescData)
	})
	return file_protos_ydb_export_proto_rawDescData
}

var file_protos_ydb_export_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_ydb_export_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_ydb_export_proto_goTypes = []interface{}{
	(ExportProgress_Progress)(0),           // 0: Ydb.Export.ExportProgress.Progress
	(ExportToS3Settings_Scheme)(0),         // 1: Ydb.Export.ExportToS3Settings.Scheme
	(ExportToS3Settings_StorageClass)(0),   // 2: Ydb.Export.ExportToS3Settings.StorageClass
	(*ExportProgress)(nil),                 // 3: Ydb.Export.ExportProgress
	(*ExportItemProgress)(nil),             // 4: Ydb.Export.ExportItemProgress
	(*ExportToYtSettings)(nil),             // 5: Ydb.Export.ExportToYtSettings
	(*ExportToYtResult)(nil),               // 6: Ydb.Export.ExportToYtResult
	(*ExportToYtMetadata)(nil),             // 7: Ydb.Export.ExportToYtMetadata
	(*ExportToYtRequest)(nil),              // 8: Ydb.Export.ExportToYtRequest
	(*ExportToYtResponse)(nil),             // 9: Ydb.Export.ExportToYtResponse
	(*ExportToS3Settings)(nil),             // 10: Ydb.Export.ExportToS3Settings
	(*ExportToS3Result)(nil),               // 11: Ydb.Export.ExportToS3Result
	(*ExportToS3Metadata)(nil),             // 12: Ydb.Export.ExportToS3Metadata
	(*ExportToS3Request)(nil),              // 13: Ydb.Export.ExportToS3Request
	(*ExportToS3Response)(nil),             // 14: Ydb.Export.ExportToS3Response
	(*ExportToYtSettings_Item)(nil),        // 15: Ydb.Export.ExportToYtSettings.Item
	(*ExportToS3Settings_Item)(nil),        // 16: Ydb.Export.ExportToS3Settings.Item
	(*timestamppb.Timestamp)(nil),          // 17: google.protobuf.Timestamp
	(*Ydb_Operations.OperationParams)(nil), // 18: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),       // 19: Ydb.Operations.Operation
}
var file_protos_ydb_export_proto_depIdxs = []int32{
	17, // 0: Ydb.Export.ExportItemProgress.start_time:type_name -> google.protobuf.Timestamp
	17, // 1: Ydb.Export.ExportItemProgress.end_time:type_name -> google.protobuf.Timestamp
	15, // 2: Ydb.Export.ExportToYtSettings.items:type_name -> Ydb.Export.ExportToYtSettings.Item
	5,  // 3: Ydb.Export.ExportToYtMetadata.settings:type_name -> Ydb.Export.ExportToYtSettings
	0,  // 4: Ydb.Export.ExportToYtMetadata.progress:type_name -> Ydb.Export.ExportProgress.Progress
	4,  // 5: Ydb.Export.ExportToYtMetadata.items_progress:type_name -> Ydb.Export.ExportItemProgress
	18, // 6: Ydb.Export.ExportToYtRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	5,  // 7: Ydb.Export.ExportToYtRequest.settings:type_name -> Ydb.Export.ExportToYtSettings
	19, // 8: Ydb.Export.ExportToYtResponse.operation:type_name -> Ydb.Operations.Operation
	1,  // 9: Ydb.Export.ExportToS3Settings.scheme:type_name -> Ydb.Export.ExportToS3Settings.Scheme
	16, // 10: Ydb.Export.ExportToS3Settings.items:type_name -> Ydb.Export.ExportToS3Settings.Item
	2,  // 11: Ydb.Export.ExportToS3Settings.storage_class:type_name -> Ydb.Export.ExportToS3Settings.StorageClass
	10, // 12: Ydb.Export.ExportToS3Metadata.settings:type_name -> Ydb.Export.ExportToS3Settings
	0,  // 13: Ydb.Export.ExportToS3Metadata.progress:type_name -> Ydb.Export.ExportProgress.Progress
	4,  // 14: Ydb.Export.ExportToS3Metadata.items_progress:type_name -> Ydb.Export.ExportItemProgress
	18, // 15: Ydb.Export.ExportToS3Request.operation_params:type_name -> Ydb.Operations.OperationParams
	10, // 16: Ydb.Export.ExportToS3Request.settings:type_name -> Ydb.Export.ExportToS3Settings
	19, // 17: Ydb.Export.ExportToS3Response.operation:type_name -> Ydb.Operations.Operation
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_protos_ydb_export_proto_init() }
func file_protos_ydb_export_proto_init() {
	if File_protos_ydb_export_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_ydb_export_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportItemProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToYtSettings_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_export_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportToS3Settings_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_ydb_export_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_ydb_export_proto_goTypes,
		DependencyIndexes: file_protos_ydb_export_proto_depIdxs,
		EnumInfos:         file_protos_ydb_export_proto_enumTypes,
		MessageInfos:      file_protos_ydb_export_proto_msgTypes,
	}.Build()
	File_protos_ydb_export_proto = out.File
	file_protos_ydb_export_proto_rawDesc = nil
	file_protos_ydb_export_proto_goTypes = nil
	file_protos_ydb_export_proto_depIdxs = nil
}
