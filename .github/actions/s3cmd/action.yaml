name: configure s3cmd and aws cli
description: configure s3cmd and aws cli
inputs:
  s3_key_id:
    required: true
    description: "s3 key id"
  s3_key_secret:
    required: true
    description: "s3 key secret"
  s3_bucket:
    required: true
    description: "s3 bucket"
  s3_endpoint:
    required: true
    description: "s3 endpoint"
  s3_website_suffix:
    required: true
    description: "s3 website suffix"
  folder_prefix:
    required: true
    description: "folder prefix"
  build_preset:
    required: true
    description: "build preset like relwithdebinfo"
  user:
    required: false
    description: "github user"
  install:
    required: false
    default: "true"
    description: "install s3cmd and awscli"

runs:
  using: composite
  steps:
    - name: install s3cmd and awscli
      if: inputs.install == 'true'
      shell: bash
      run: |
        which s3cmd || true
        which s3cmd || {
          [ ! -f updated ] && sudo apt-get -o Dpkg::Lock::Timeout=600 update
          touch updated
          sudo apt-get -o Dpkg::Lock::Timeout=600 install -y --no-install-recommends s3cmd
        }
        s3cmd --version
        which aws || true
        which aws || {
          [ ! -f updated ] && sudo apt-get -o Dpkg::Lock::Timeout=600 update
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version
        }
        aws --version

    - name: configure s3cmd and awscli
      shell: bash --noprofile --norc -eo pipefail -x {0}
      env:
        S3_ENDPOINT: ${{ inputs.s3_endpoint }}
        S3_BUCKET: ${{ inputs.s3_bucket }}
        S3_WEBSITE_SUFFIX: ${{ inputs.s3_website_suffix }}
        S3_FOLDER_PREFIX: ${{ inputs.folder_prefix }}
        S3_KEY_ID: ${{ inputs.s3_key_id }}
        S3_SECRET_ACCESS_KEY: ${{ inputs.s3_key_secret }}
        BUILD_PRESET: ${{ inputs.build_preset }}
        USER: ${{ inputs.user || 'github'}}
      run: |
        export S3CMD_CONFIG=$(sudo -E -H -u $USER mktemp -p /home/$USER)
        sudo chown $USER: $S3CMD_CONFIG
        echo "S3CMD_CONFIG=$S3CMD_CONFIG" >> $GITHUB_ENV
        export GITHUB_WORKFLOW_NO_SPACES=${GITHUB_WORKFLOW// /-}
        export S3_ENDPOINT_NO_PROTOCOL=$(echo $S3_ENDPOINT | sed 's/https\?:\/\///')
        cat <<EOF | sudo -E -H -u $USER tee $S3CMD_CONFIG
        [default]
        access_key = ${S3_KEY_ID}
        secret_key = ${S3_SECRET_ACCESS_KEY}
        bucket_location = eu-north1
        host_base = ${S3_ENDPOINT_NO_PROTOCOL}
        host_bucket = %(bucket)s.${S3_ENDPOINT_NO_PROTOCOL}
        EOF

        sudo -E -H -u $USER mkdir -p /home/$USER/.aws/
        cat <<EOF | sudo -E -H -u $USER tee /home/$USER/.aws/credentials
        [default]
        aws_access_key_id = ${S3_KEY_ID}
        aws_secret_access_key = ${S3_SECRET_ACCESS_KEY}
        EOF
        cat <<EOF | sudo -E -H -u $USER tee /home/$USER/.aws/config
        [default]
        region = eu-north1
        endpoint_url=$S3_ENDPOINT
        s3 =
          max_concurrent_requests = 32
          multipart_chunksize = 32MB
          max_queue_size = 10240
        EOF

        sudo mkdir -p /root/.aws/
        cat <<EOF | sudo tee /root/.aws/credentials
        [default]
        aws_access_key_id = ${S3_KEY_ID}
        aws_secret_access_key = ${S3_SECRET_ACCESS_KEY}
        EOF
        cat <<EOF | sudo tee /root/.aws/config
        [default]
        region = eu-north1
        endpoint_url=$S3_ENDPOINT
        s3 =
          max_concurrent_requests = 32
          multipart_chunksize = 32MB
          max_queue_size = 10240
        EOF

        folder="${{ runner.arch == 'X64' && 'x86-64' || runner.arch == 'ARM64' && 'arm64' || 'unknown' }}"

        # shellcheck disable=SC2195
        case "$BUILD_PRESET" in
          relwithdebinfo|release)
            ;;
          debug)
            folder+="-debug"
            ;;
          release-asan)
            folder+="-asan"
            ;;
          release-tsan)
            folder+="-tsan"
            ;;
          release-msan)
            folder+="-msan"
            ;;
          release-ubsan)
            folder+="-ubsan"
            ;;
          *)
            echo "Invalid preset: $BUILD_PRESET"
            exit 1
            ;;
        esac
        # shellcheck disable=SC2129
        echo "S3_BUCKET_PATH=s3://${S3_BUCKET}/${{ github.repository }}/${GITHUB_WORKFLOW_NO_SPACES}/${{ github.run_id }}/${{ github.run_attempt || '1' }}/${S3_FOLDER_PREFIX}${folder}" >> $GITHUB_ENV
        echo "S3_URL_PREFIX=${S3_ENDPOINT}/${S3_BUCKET}/${{ github.repository }}/${GITHUB_WORKFLOW_NO_SPACES}/${{ github.run_id }}/${{ github.run_attempt || '1' }}/${S3_FOLDER_PREFIX}${folder}" >> $GITHUB_ENV
        echo "S3_WEBSITE_PREFIX=https://${S3_BUCKET}.${S3_WEBSITE_SUFFIX}/${{ github.repository }}/${GITHUB_WORKFLOW_NO_SPACES}/${{ github.run_id }}/${{ github.run_attempt || '1' }}/${S3_FOLDER_PREFIX}${folder}" >> $GITHUB_ENV
        echo "S3_WEBSITE_SUFFIX=${S3_WEBSITE_SUFFIX}" >> $GITHUB_ENV
        
    - name: test s3cmd
      shell: bash
      run: sudo -E -H -u $USER s3cmd ls
      env:
        USER: ${{ inputs.user || 'github'}}
    - name: test awscli
      shell: bash
      run: sudo -E -H -u $USER aws s3 ls
      env:
        USER: ${{ inputs.user || 'github'}}
