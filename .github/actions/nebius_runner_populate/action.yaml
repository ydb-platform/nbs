name: Manage nebius runners
description: Create and delete nebius runners to achieve desired amount of runners
inputs:
  parent_id:
    required: true
    description: "parent id"
  vms_ttl:
    required: true
    description: "vms ttl"
  max_vms_to_create:
    required: true
    description: "max vms to create"
  flavor:
    required: true
    description: "required flavor"
  token:
    required: true
    description: "github token"
  service_account_key:
    required: true
    description: "service account key"
outputs:
  RUNNING_VMS_COUNT:
    value: ${{ steps.populate.outputs.RUNNING_VMS_COUNT }}
    description: "running vms count"
  VMS_TO_CREATE:
    value: ${{ steps.populate.outputs.VMS_TO_CREATE }}
    description: "vms to create"
  VMS_TO_REMOVE:
    value: ${{ steps.populate.outputs.VMS_TO_REMOVE }}
    description: "vms to remove"

runs:
  using: composite
  steps:
    - name: set up home
      shell: bash
      run: echo "HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    - name: write service account key to file
      shell: bash
      run: |
        export SERVICE_ACCOUNT_KEY=$(mktemp)
        echo "SERVICE_ACCOUNT_KEY=${SERVICE_ACCOUNT_KEY}" >> $GITHUB_ENV
        echo "${KEY_CONTENTS}" > $SERVICE_ACCOUNT_KEY
      env:
        KEY_CONTENTS: ${{ inputs.service_account_key }}
    - name: install dependencies
      shell: bash
      run: |
        pip install PyGithub==2.5.0 nebius==0.2.28
    - name: Select nebius runner
      shell: bash
      id: populate
      run: |
        export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/.github
        python3 -m scripts.nebius-populate-vms \
          --service-account-key "${SERVICE_ACCOUNT_KEY}" \
          --github-repo-owner "${OWNER}" \
          --github-repo "${REPO}" \
          --parent-id "${PARENT_ID}" \
          --max-vms-to-create "${MAX_VMS_TO_CREATE}" \
          --flavor "${FLAVOR}" \
          --vms-older-than "${VMS_OLDER_THAN}" \
          --maximum-amount-of-vms-to-have "$((MAX_VMS_TO_CREATE*2))" 
      env:
        OWNER: ${{ github.event.repository.owner.login }}
        REPO: ${{ github.event.repository.name }}
        PARENT_ID: ${{ inputs.parent_id }}
        MAX_VMS_TO_CREATE: ${{ inputs.max_vms_to_create }}
        FLAVOR: ${{ inputs.flavor }}
        VMS_OLDER_THAN: ${{ inputs.vms_ttl }}
        GITHUB_TOKEN: ${{ inputs.token }}
