name: Create and delete VM
on:
  workflow_dispatch:
    inputs:
      vm_name_suffix:
        type: string
        default: ""
        description: "Suffix to append to VM name"
      vm_image:
        type: string
        default: ""
        description: "VM image to use"
      disk_type:
        type: string
        default: "network-ssd-nonreplicated"
        description: "Disk type for VM"
      nebius:
        type: choice
        default: "no"
        description: "Run on nebius runners"
        options:
          - "yes"
          - "no"
  workflow_call:
    inputs:
      vm_name_suffix:
        type: string
        default: ""
        description: "Suffix to append to VM name"
      vm_image:
        type: string
        default: ""
        description: "VM image to use"
      disk_type:
        type: string
        default: "network-ssd-nonreplicated"
        description: "Disk type for VM"
      nebius:
        type: string
        default: "no"
        description: "Run on nebius runners"

env:
  nebius: ${{ vars.GLOBAL_RUN_ON_NEBIUS == 'yes' || ((github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'nebius')) || inputs.nebius == 'yes') }}


jobs:
  provide-runner:
    name: Start self-hosted runner [image=${{ inputs.vm_image || vars.IMAGE_ID_2204 }}]
    timeout-minutes: 60
    if: always()
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-runner.outputs.label || steps.start-runner-nebius.outputs.label }}
      instance-id: ${{ steps.start-runner.outputs.instance-id || steps.start-runner-nebius.outputs.instance-id }}
      runner_ipv4: ${{ steps.start-runner.outputs.external-ipv4 || steps.start-runner-nebius.outputs.external-ipv4 }}
      runner_local_ipv4: ${{ steps.start-runner.outputs.local-ipv4 || steps.start-runner-nebius.outputs.local-ipv4 }}
      nebius: ${{ env.nebius == 'false' && 'no' || 'yes' }}
    steps:
      - name: checkout PR
        uses: actions/checkout@v4
        if: github.event.pull_request.head.sha != ''
        with:
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ !contains(github.event.pull_request.labels.*.name, 'rebase') && 1 || 0 }}
      - name: rebase PR
        if: ${{ github.event.pull_request.head.sha != '' && contains(github.event.pull_request.labels.*.name, 'rebase') }}
        shell: bash
        run: |
          git config user.email "librarian@nebius.com"
          git config user.name "Rebase Robotovich"
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git rebase origin/${{ github.event.pull_request.base.ref }}
      - name: checkout
        uses: actions/checkout@v4
        if: github.event.pull_request.head.sha == ''
        with:
          submodules: true
      - name: Start runner
        id: start-runner
        if: env.nebius == 'false' && always() || false
        uses: ./.github/actions/runner_create
        timeout-minutes: 60
        with:
          repo_owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          service_account_key: ${{ secrets.NEBIUS_SA_JSON_CREDENTIALS }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          vm_folder: bjeuq5o166dq4ukv3eec
          vm_name: ${{ github.event.pull_request.number && format('pr-{0}{1}-{2}-{3}', github.event.pull_request.number, inputs.vm_name_suffix, github.run_id, github.run_attempt) || format('run-{0}-{1}', github.run_id, github.run_attempt) }}
          vm_zone: eu-north1-c
          vm_cpu: 60
          vm_memory: 420
          vm_disk_type: ${{ inputs.disk_type || 'network-ssd-nonreplicated' }}
          vm_disk_size: 1023
          vm_subnet: f8uh0ml4rhb45nde9p75
          vm_image: ${{ inputs.vm_image || vars.IMAGE_ID_2204 }}
          vm_labels: ${{ github.event.pull_request.number && format('pr={0},run={1}-{2},repo={3},owner={4}', github.event.pull_request.number, github.run_id, github.run_attempt, github.event.repository.name, github.repository_owner) || format('run={0}-{1},repo={2},owner={3}', github.run_id, github.run_attempt, github.event.repository.name, github.repository_owner) }}
          vm_user_passwd: ${{ secrets.VM_USER_PASSWD }}
      - name: Start runner (nebius)
        id: start-runner-nebius
        if: env.nebius == 'true' && always() || false
        uses: ./.github/actions/nebius_runner_create
        timeout-minutes: 60
        with:
          org: ydb-platform
          team: nbs
          repo_owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          service_account_key: ${{ secrets.NEW_NEBIUS_SA_JSON_CREDENTIALS }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          vm_parent_id: ${{ vars.NEBIUS_PARENT_ID }}
          vm_name: ${{ github.event.pull_request.number && format('pr-{0}{1}-{2}-{3}', github.event.pull_request.number, inputs.vm_name_suffix, github.run_id, github.run_attempt) || format('run-{0}-{1}', github.run_id, github.run_attempt) }}
          vm_preset: "16vcpu-64gb"
          vm_disk_type: ${{ inputs.disk_type || 'network-ssd-nonreplicated' }}
          vm_disk_size: 1023
          vm_subnet: ${{ vars.NEBIUS_SUBNET_ID }}
          vm_image: ${{ inputs.vm_image || vars.NEBIUS_IMAGE_ID_2204 }}
          vm_labels: ${{ github.event.pull_request.number && format('pr={0},run={1}-{2},repo={3},owner={4}', github.event.pull_request.number, github.run_id, github.run_attempt, github.event.repository.name, github.repository_owner) || format('run={0}-{1},repo={2},owner={3}', github.run_id, github.run_attempt, github.event.repository.name, github.repository_owner) }}
          vm_user_passwd: ${{ secrets.VM_USER_PASSWD }}
  build-and-test:
    name: Build and test NBS (relwithdebinfo) [id=${{ needs.provide-runner.outputs.instance-id }} local_ip=${{ needs.provide-runner.outputs.runner_local_ipv4 }} ip=${{ needs.provide-runner.outputs.runner_ipv4 }}]
    uses: ./.github/workflows/build_and_test_ya.yaml
    needs:
      - provide-runner
    with:
      runner_kind: self-hosted
      runner_label: ${{ needs.provide-runner.outputs.label }}
      runner_instance_id: ${{ needs.provide-runner.outputs.instance-id }}
      runner_ipv4: ${{ needs.provide-runner.outputs.runner_ipv4 }}
      build_target: "cloud/tasks"
      test_target: "cloud/tasks"
      build_preset: "relwithdebinfo"
      run_build: true
      run_tests: true
      test_size: "small"
      test_type: "go_test"
      link_threads: "24"
      test_threads: "4"
      sleep_after_tests: ${{ contains(github.event.pull_request.labels.*.name, 'sleep') && '7200' || '1' }}
      cache_update_build: true
      cache_update_tests: true
      upload_ya_dir: "no"
      clean_ya_dir: "no"
      use_network_cache: "yes"
      nebius: ${{ needs.provide-runner.outputs.nebius }}
    secrets: inherit

  release-runner:
    name: Release self-hosted runner [id=${{ needs.provide-runner.outputs.instance-id }} local_ip=${{ needs.provide-runner.outputs.runner_local_ipv4 }} ip=${{ needs.provide-runner.outputs.runner_ipv4 }} vm_image=${{ inputs.vm_image || vars.IMAGE_ID_2204 }}]
    needs:
      - provide-runner  # required to get output from the start-runner job
      - build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: checkout PR
        uses: actions/checkout@v4
        if: github.event.pull_request.head.sha != ''
        with:
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ !contains(github.event.pull_request.labels.*.name, 'rebase') && 1 || 0 }}
      - name: rebase PR
        if: ${{ github.event.pull_request.head.sha != '' && contains(github.event.pull_request.labels.*.name, 'rebase') }}
        shell: bash
        run: |
          git config user.email "librarian@nebius.com"
          git config user.name "Rebase Robotovich"
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git rebase origin/${{ github.event.pull_request.base.ref }}
      - name: checkout
        uses: actions/checkout@v4
        if: github.event.pull_request.head.sha == ''
        with:
          submodules: true
      - name: Stop runner
        uses: ./.github/actions/runner_remove
        if: env.nebius == 'false' && always() || false
        timeout-minutes: 60
        with:
          service_account_key: ${{ secrets.NEBIUS_SA_JSON_CREDENTIALS }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          repo_owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          vm_id: ${{ needs.provide-runner.outputs.instance-id }}
      - name: Stop runner (nebius)
        uses: ./.github/actions/nebius_runner_remove
        if: env.nebius == 'true' && always() || false
        timeout-minutes: 60
        with:
          service_account_key: ${{ secrets.NEW_NEBIUS_SA_JSON_CREDENTIALS }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          repo_owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          vm_parent_id: ${{ vars.NEBIUS_PARENT_ID }}
          vm_id: ${{ needs.provide-runner.outputs.instance-id }}
