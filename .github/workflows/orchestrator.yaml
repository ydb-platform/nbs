name: Orchestrator
run-name: ${{ format('Orchestrator ({0} {1} {2})', github.event_name, inputs.run_light, inputs.run_heavy)  }}
      
on:
  workflow_call:
    inputs:
      provision_mode:
        description: 'Provision mode (if set to initial it will use ubuntu-latest image)'
        type: string
        default: 'regular'
      loop:
        description: 'Loop the action'
        type: string
        default: "no"
      run_light:
        description: 'Run light VMs'
        type: string
        default: "no"
      run_heavy:
        description: 'Run heavy VMs'
        type: string
        default: "no"
      workflow_name:
        description: 'Name of the workflow to run'
        type: string
        default: 'orchestrator.yaml'
  workflow_dispatch:
    inputs:
      provision_mode:
        description: 'Provision mode (if set to initial it will use ubuntu-latest image)'
        type: choice
        options:
          - initial
          - regular
        required: true
        default: 'regular'
      loop:
        description: 'Loop the action'
        type: choice
        options:
          - "yes"
          - "no"
        required: false
        default: "no"
      run_light:
        description: 'Run light VMs'
        type: choice
        options:
          - "yes"
          - "no"
        required: false
        default: "yes"
      run_heavy:
        description: 'Run heavy VMs'
        type: choice
        options:
          - "yes"
          - "no"
        required: false
        default: "yes"
      workflow_name:
        description: 'Name of the workflow to run'
        type: choice
        options:
          - orchestrator-light.yaml
          - orchestrator-heavy.yaml
        required: true
        default: 'orchestrator-light.yaml'

jobs:
  light:
    name: Populate light VMs
    if: ${{ inputs.run_light == 'yes' }}
    uses: ./.github/workflows/scheduler.yaml
    secrets: inherit
    with:
      max_vms_to_create: 5
      vms_ttl: "21600"
      flavor: light
      provision_mode: ${{ inputs.provision_mode || 'regular' }}
      loop: ${{ inputs.provision_mode == 'initial' && 'no' || (inputs.loop || 'no') }}

  heavy:
    name: Populate heavy VMs
    if: ${{ inputs.run_heavy == 'yes' }}
    uses: ./.github/workflows/scheduler.yaml
    secrets: inherit
    with:
      max_vms_to_create: 5
      vms_ttl: "21600"
      flavor: heavy
      provision_mode: ${{ inputs.provision_mode || 'regular' }}
      loop: ${{ inputs.provision_mode == 'initial' && 'no' || (inputs.loop == 'yes' && 'yes' || 'no') }}

