name: Build and test NBS on demand

on:
  workflow_dispatch:
    inputs:
      build_target:
        type: string
        default: "cloud/tasks/"
        description: "limit build to specific target"
      test_target:
        type: string
        default: "cloud/tasks/"
        description: "limit test to specific target"
      build_preset:
        type: choice
        default: "relwithdebinfo"
        description: "Build preset"
        options:
          - debug
          - relwithdebinfo
          - release-asan
          - release-tsan
          - release-msan
          - release-ubsan
      cache_update_build:
        type: boolean
        default: false
        description: "Update build cache in build stage"
      cache_update_tests:
        type: boolean
        default: false
        description: "Update build cache in test stage"
      test_size:
        type: choice
        default: "small"
        description: "test size to run"
        options:
          - small
          - small,medium
          - small,medium,large
      test_type:
        type: choice
        default: "unittest,clang_tidy,gtest,py3test,py2test,pytest,flake8,black,py2_flake8,go_test,gofmt"
        description: "type of tests to run"
        options:
          - unittest,clang_tidy,gtest
          - py3test,py2test,pytest,flake8,black,py2_flake8
          - go_test,gofmt
          - unittest,clang_tidy,gtest,py3test,py2test,pytest,flake8,black,py2_flake8,go_test,gofmt
      sleep_after_tests:
        type: string
        default: "0"
        description: "Amount of seconds to sleep after tests"
      number_of_retries:
        type: string
        default: "1"
        description: "Number of retries for tests"
  workflow_call:
    inputs:
      build_target:
        type: string
        default: "cloud/blockstore/apps/,cloud/filestore/apps/,cloud/disk_manager/,cloud/tasks/,cloud/storage/"
        description: "limit build to specific target"
      test_target:
        type: string
        default: "cloud/blockstore/,cloud/filestore/,cloud/disk_manager/,cloud/tasks/,cloud/storage/"
        description: "limit test to specific target"
      build_preset:
        type: string
        default: "relwithdebinfo"
      vm_name_suffix:
        type: string
        default: ""
      test_size:
        type: string
        default: "small,medium,large"
      test_type:
        type: string
        default: "unittest,clang_tidy,gtest,py3test,py2test,pytest,flake8,black,py2_flake8,go_test,gofmt"
      sleep_after_tests:
        type: string
        default: "0"
        description: "Amount of seconds to sleep after tests"
      cache_update_build:
        type: boolean
        default: false
        description: "Update build cache in build stage"
      cache_update_tests:
        type: boolean
        default: false
        description: "Update build cache in test stage"
      upload_ya_dir:
        type: string
        default: "no"
        description: "Upload ya dir to s3"
      clean_ya_dir:
        type: string
        default: "no"
        description: "Clean ya dir from image before building"
      use_network_cache:
        type: string
        default: "yes"
        description: "Use network cache"
      disk_type:
        type: string
        default: "network-ssd-nonreplicated"
        description: "Disk type for VM"
      number_of_retries:
        type: string
        default: "1"
        description: "Number of retries for tests"



jobs:
  build-and-test:
    name: Build and test NBS (${{ inputs.build_preset }})
    uses: ./.github/workflows/build_and_test_ya.yaml
    with:
      runner_kind: self-hosted
      runner_flavor: "heavy"
      build_target: ${{ inputs.build_target }}
      test_target: ${{ inputs.test_target }}
      build_preset: ${{ inputs.build_preset }}
      run_build: true
      run_tests: true
      test_size: ${{ inputs.test_size }}
      test_type: ${{ inputs.test_type }}
      sleep_after_tests: ${{ inputs.sleep_after_tests }}
      cache_update_build: ${{ inputs.cache_update_build }}
      cache_update_tests: ${{ inputs.cache_update_tests }}
      upload_ya_dir: ${{ github.event_name == 'workflow_dispatch' && 'no' || inputs.upload_ya_dir}}
      clean_ya_dir: ${{ github.event_name == 'workflow_dispatch' && 'no' || inputs.clean_ya_dir }}
      use_network_cache: ${{ github.event_name == 'workflow_dispatch' && 'yes'|| inputs.use_network_cache }}
      truncate_enabled: ${{ contains(github.event.pull_request.labels.*.name, 'disable_truncate') && 'no' || 'yes' }}
      number_of_retries: ${{ inputs.number_of_retries }}
    secrets: inherit

