name: Create Test PR 
run-name: ${{ format('Create Test PR ({0})', github.event_name) }}

on:
  schedule:
    - cron: "0 * * * *" 
  workflow_dispatch:

jobs:
  create-test-pr:
    runs-on: ubuntu-latest
    if: github.repository == 'librarian-test/nbs'
    strategy:
      fail-fast: false
      matrix:
        count: [1, 2]

    steps:
      - name: Generate random branch name
        id: rand
        run: |
          branch="pr-$(shuf -i 10000-99999 -n 1)"

          # Component selection including "none"
          options=(filestore blockstore disk_manager tasks none)
          component=${options[$RANDOM % ${#options[@]}]}
          large_tests_options=("yes" "no" "no" "no" "no" "no" "no" "no" "no" "no" "no")
          large_tests=${large_tests_options[$RANDOM % ${#large_tests_options[@]}]}

          # Sanitizer only if filestore or blockstore
          if [[ "$component" == "filestore" || "$component" == "blockstore" ]]; then
            sanitizers=("asan" "tsan" "msan" "ubsan" "")
            sanitizer=${sanitizers[$RANDOM % ${#sanitizers[@]}]}
          else
            sanitizer=""
          fi
          {
            echo "branch=$branch"
            echo "component=$component"
            echo "sanitizer=$sanitizer"
            echo "large_tests=$large_tests"
          } >> "$GITHUB_OUTPUT"

      - name: Checkout repo 
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          

      - name: Set up Git
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/librarian-test/nbs.git"


      - name: Create test branch and files
        run: |
          BRANCH=${{ steps.rand.outputs.branch }}
          git checkout -b "$BRANCH"
          echo "Test file" > "$BRANCH"
          git add "$BRANCH"
          mkdir -p .github
          # echo "Test workflow file" > ".github/$BRANCH"
          # git add "$BRANCH" ".github/$BRANCH"
          git commit -m "Test PR: $BRANCH"

      - name: Push test branch
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          BRANCH=${{ steps.rand.outputs.branch }}
          git push "https://x-access-token:${GH_TOKEN}@github.com/librarian-test/nbs.git" HEAD:$BRANCH

      - name: Create Pull Request via CLI ${{ matrix.count }}
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          BRANCH=${{ steps.rand.outputs.branch }}
          COMPONENT=${{ steps.rand.outputs.component }}
          SANITIZER=${{ steps.rand.outputs.sanitizer }}
          LARGE_TESTS=${{ steps.rand.outputs.large_tests }}
          # if any label is not none add it comma separated with arguments --label
          LABELS=()
          if [[ "$COMPONENT" != "none" ]]; then
            LABELS+=("$COMPONENT")
          fi
          if [[ "$SANITIZER" != "" ]]; then
            LABELS+=("$SANITIZER")
          fi
          LABELS_STR=$(IFS=,; echo "${LABELS[*]}")
          if [[ -n "$LABELS_STR" ]]; then
            LABELS_ARG="--label $LABELS_STR"
          else
            LABELS_ARG=""
          fi
          if [[ "$LARGE_TESTS" == "yes" ]]; then
            LABELS_ARG="$LABELS_ARG --label large-tests"
          fi
          # Create the PR with the specified labels
          PR_URL=$(gh pr create \
            --repo librarian-test/nbs \
            --head "$BRANCH" \
            --base main \
            --title "Test PR: $BRANCH" \
            $LABELS_ARG \
            --body "Auto-created test PR for component \`$COMPONENT\` with sanitizer \`$SANITIZER\`." 
          )
          
          echo "Created PR at: $PR_URL"

          # Extract PR number from URL (e.g., .../pull/164)
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "pr_number=$PR_NUMBER" >> "$GITHUB_OUTPUT"
  remove-old-prs:
    runs-on: ubuntu-latest
    needs: create-test-pr
    concurrency:
      group: remove-old-prs
      cancel-in-progress: false
    if: github.repository == 'librarian-test/nbs'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          sparse-checkout: '.github'
      - name: Remove old PRs
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          sleep 15
          bash .github/scripts/remove_test_branches.sh
